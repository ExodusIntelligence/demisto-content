from CommonServerPython import *

BOOL_TO_DESCRIPTION = {True: 'ðŸ”´ Detected', False: 'ðŸŸ¢ Not Detected'}


def colorize(values: list[dict[str, bool]] | dict[str, bool]) -> list[dict[str, str]]:
    if isinstance(values, dict):
        values = values,
    return [{key: BOOL_TO_DESCRIPTION[value] for key, value in dictionary.items()}
            for dictionary in values]


def table_command(context: dict) -> CommandResults:
    if not context:
        return CommandResults(
            readable_output='### Waiting on entries\n'
                            'When `InvestigationDetailedSummaryParse` is finished, its results will be shown here.'
        )

    human_readable = []
    for tactic, values in context.items():
        human_readable.append(tableToMarkdown(name=tactic, t=colorize(values)))
    return CommandResults(readable_output='\n'.join(human_readable))


def main():
    try:
        context = json.loads(
            demisto.incident().get('CustomFields', {}).get('malwaredetailedinvestigationsummary') or '{}')
        return_results(table_command(context))
    except Exception as ex:
        demisto.error(traceback.format_exc())  # print the traceback
        return_error(f'Failed to execute InvestigationDetailedSummaryToTable. Error: {str(ex)}')


''' ENTRY POINT '''

if __name__ in ('__main__', '__builtin__', 'builtins'):
    main()
